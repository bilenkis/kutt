image:
  pullPolicy: "IfNotPresent"
  tag: "v2.7.4"

serviceAccount:
  create: false

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# -- Toleration labels for pod assignment
# tolerations: 
#   - effect: NoSchedule
#     key: app
#     operator: Equal
#     value: kutt

# -- Affinity settings for pod assignment
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
          matchLabels:
            app: kutt
      topologyKey: "kubernetes.io/hostname"

# Please see https://github.com/thedevs-network/kutt/blob/develop/.docker.env for complete list of environment variables.
# Secret Keys and mail settings are provided through their own values `secretEnvs` and `mail`.
env:
  - name: ADMIN_EMAILS
    value: ""
  - name: CUSTOM_DOMAIN_USE_HTTPS
    value: "false"
  - name: DEFAULT_DOMAIN
    value: "localhost:3000"
  - name: DEFAULT_MAX_STATS_PER_LINK
    value: "5000"
  - name: DISALLOW_ANONYMOUS_LINKS
    value: "false"
  - name: DISALLOW_REGISTRATION
    value: "false"
  - name: LINK_LENGT
    value: "6"
  - name: NON_USER_COOLDOWN
    value: "0"
  - name: REPORT_EMAIL
    value: ""
  - name: SITE_NAME
    value: "Kutt"
  - name: USER_LIMIT_PER_DAY
    value: "50"

envSecrets:
  google:
    analytics: ""
    analyticsUniversal: ""
    existingSecret: ""
    safeBrowsingKey: ""
  jwt:
    ## @param envSecrets.jwt.existingSecret Use existing secret for JWT secret key. The secret has to contain the key `JWT_SECRET`
    ## NOTE: When it's set the envSecrets.jwt.key is ignored.
    existingSecret: ""
    ## make sure to replace with your own secret key
    key: "secret-jwt-key"
  recaptcha:
    ## @param envSecrets.recaptcha.existingSecret Use existing secret for ReCaptacha secrets. The secret has to contain the keys `RECAPTCHA_SITE_KEY` and `RECAPTCHA_SECRET_KEY`
    ## NOTE: When it's set the envSecrets.recaptcha.siteKey and envSecrets.recaptcha.secretKey is ignored.
    existingSecret: ""
    siteKey: ""
    secretKey: ""

mail:
  host: ""
  port: ""
  secure: true
  username: ""
  from: ""
  password: ""
  ## @param mail.existingSecret Use existing secret for password details. The secret has to contain the key `MAIL_PASSWORD`
  ## NOTE: When it's set the mail.password is ignored.
  existingSecret: ""

postgresql:
  enabled: false

externalPostgresql:
  database: kutt
  hostname: "kutt.rds.local.vpc"
  # password: see secrets.yaml
  port: 5432
  username: kutt

redis:
  enabled: false

externalRedis:
  auth:
    enabled: false
    existingSecret: ""
    password: ""
    userPasswordKey: ""
  hostname: "kutt.redis.local.vpc"
  port: 6379
